type Chat {
  id: ID!
  name: String!
  creatorId: String!
  memberIds: [String!]!
  isGroup: Boolean!
  lastMessageId: String
  createdAt: DateTimeISO!
  updatedAt: DateTimeISO!
}

type ChatConnection {
  edges: [ChatEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type ChatEdge {
  node: Chat!
  cursor: String!
}

type Message {
  id: ID!
  chatId: String!
  userId: String!
  content: String!
  type: MessageType!
  replyToId: String
  createdAt: DateTimeISO!
  updatedAt: DateTimeISO
}

type MessageConnection {
  edges: [MessageEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type MessageEdge {
  node: Message!
  cursor: String!
}

"""The type of message content"""
enum MessageType {
  TEXT
  IMAGE
  FILE
  SYSTEM
}

type Query { 
  getChats(first: Int, after: String, last: Int, before: String, searchTerm: String, isGroup: Boolean): ChatConnection!
  getChatMessages(first: Int, after: String, last: Int, before: String, chatId: String!, messageType: String): MessageConnection!
}